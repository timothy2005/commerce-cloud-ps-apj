# Properties common across all environments and aspects


# place your custom properties into this file instead of modifying the project.properties
# all properties in this file have higher priority and will overwrite the platform/project.properties settings.
# common.properties
lang.packs=de,en

csrf.allowed.url.patterns=/[^/]+(/[^?]*)+(sop/response)$,/[^/]+(/[^?]*)+(merchant_callback)$,/[^/]+(/[^?]*)+(hop/response)$,/[^/]+(/[^?]*)+(language)$,/[^/]+(/[^?]*)+(currency)$,/(events)$

# faster startup / update system etc
backoffice.fill.typefacade.cache.on.startup=false
csrf.allowed.url.patterns=.*
recaptcha.publickey=
recaptcha.privatekey=
googleApiKey=

orbeonweb.orbeon.persistence.uri=https://localhost:${tomcat.ssl.port}/xyformsweb/fr/service/hybris
xyformsservices.orbeon.url.address=http://localhost:${tomcat.http.port}/web-orbeon
xyformsstorefrontcommons.orbeon.keystoreFile=${platformhome}/tomcat/lib/keystore

sqlserver.enableLimitSupportForSQLServer2012=true

# https://sap.github.io/spartacus-docs/installing-sap-commerce-cloud-2005/
occ.rewrite.overlapping.paths.enabled=true
corsfilter.default.allowedOrigins=*
corsfilter.acceleratorservices.allowedOrigins=${ccv2.services.jsapps.url.0} ${ccv2.services.accstorefront.url.0}
corsfilter.permissionswebservices.allowedOrigins=${ccv2.services.jsapps.url.0} ${ccv2.services.accstorefront.url.0}
corsfilter.ycommercewebservices.allowedOrigins=${ccv2.services.jsapps.url.0} ${ccv2.services.accstorefront.url.0}
corsfilter.ycommercewebservices.allowedHeaders=origin content-type accept authorization cache-control x-anonymous-consents x-profile-tag-debug x-consent-reference
corsfilter.ycommercewebservices.exposedHeaders=x-anonymous-consents
corsfilter.commercewebservices.allowedOrigins=${ccv2.services.jsapps.url.0} ${ccv2.services.accstorefront.url.0}
corsfilter.commercewebservices.allowedHeaders=origin content-type accept authorization cache-control x-anonymous-consents x-profile-tag-debug x-consent-reference
corsfilter.commercewebservices.exposedHeaders=x-anonymous-consents
corsfilter.assistedservicewebservices.allowedOrigins=${ccv2.services.jsapps.url.0} ${ccv2.services.accstorefront.url.0}
corsfilter.assistedservicewebservices.allowedHeaders=origin content-type accept authorization cache-control x-anonymous-consents x-profile-tag-debug x-consent-reference
corsfilter.assistedservicewebservices.exposedHeaders=x-anonymous-consents
mockup.payment.label.billTo.region=billTo_state
mockup.payment.label.billTo.phoneNumber=billTo_phoneNumber
yacceleratorordermanagement.fraud.scoreLimit=500000
yacceleratorordermanagement.fraud.scoreTolerance=500000
yacceleratorordermanagement.fraud.scoreLimitExternal=500000
yacceleratorordermanagement.fraud.scoreToleranceExternal=500000
task.polling.interval.min=0
smarteditaddon.dynamicattribute.enabled=true
build.parallel=true

# ccv2.services... properties contain the urls for the default endpoints of a Commerce Cloud environment
website.electronics-spa.http=${ccv2.services.jsapps.url.0}
website.electronics-spa.https=${ccv2.services.jsapps.url.0}

website.electronics.http=${ccv2.services.accstorefront.url.0}
website.electronics.https=${ccv2.services.accstorefront.url.0}

# Whitelisting SmartEdit for your Storefront
# https://help.sap.com/viewer/86dd1373053a4c2da8f9885cc9fbe55d/1905/en-US/fb742b29cf3c4e81aac7c131c0441172.html
smarteditaddon.javascript.paths.responsive=/shared/common/js/webApplicationInjector.js?allow-origin=localhost:9002,*.*.model-t.cc.commerce.ondemand.com:443;/shared/common/js/reprocessPage.js;/shared/common/js/adjustComponentRenderingToSE.js;/responsive/common/js/smarteditaddon.js

#scpi integration
keygen.customer.sap_customer_id.start=0000490000
keygen.customer.sap_contact_id.start=0000490000
keygen.order.code.start=0006200000
sapcpiproductexchange.sapCpiProductFeaturePersistenceHook.collectionDelimiter=,
#debug log
log4j2.config.xml=
log4j2.logger.odataprocessor.name = de.hybris.platform.odata2services.odata
log4j2.logger.odataprocessor.level = DEBUG
log4j2.logger.odataprocessor.appenderRef.stdout.ref = STDOUT


log4j2.logger.sapcpicustomerexchange.name = de.hybris.platform.sap.sapcpiorderexchange
log4j2.logger.sapcpicustomerexchange.level = DEBUG
log4j2.logger.sapcpicustomerexchange.appenderRef.stdout.ref = STDOUT


log4j2.logger.sapcpicustomerexchange.name = de.hybris.platform.sap.sapcpiorderexchangeoms
log4j2.logger.sapcpicustomerexchange.level = DEBUG
log4j2.logger.sapcpicustomerexchange.appenderRef.stdout.ref = STDOUT
csrf.allowed.url.patterns=.*
