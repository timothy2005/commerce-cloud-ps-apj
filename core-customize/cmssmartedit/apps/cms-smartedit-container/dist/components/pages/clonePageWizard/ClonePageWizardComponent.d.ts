import { CMSPageTypes, ICMSPage, ISyncPollingService } from 'cmscommons';
import { GenericEditorStructure, IAlertService, ICatalogVersion, IConfirmationModalService, IExperienceService, ISharedDataService, IUriContext, SystemEventService, WizardConfig, WizardService, WizardStep } from 'smarteditcommons';
import { IRestrictionType } from '../../../dao/RestrictionTypesRestService';
import { PageFacade } from '../../../facades';
import { ClonePageAlertService } from '../../../services/actionableAlert/ClonePageAlertService';
import { RestrictionTypesService } from '../../../services/pageRestrictions/RestrictionTypesService';
import { RestrictionsStepHandlerFactory } from '../../../services/pages/RestrictionsStepHandlerFactory';
import { RestrictionsEditorFunctionBindings } from '../../../services/pages/types';
import { RestrictionsService } from '../../../services/RestrictionsService';
import { RestrictionsDTO, WizardCallbacks, WizardStepApi } from '../pageWizard';
import { ClonePageBuilderFactory } from './ClonePageBuilderFactory';
export declare class ClonePageWizardComponent implements WizardStepApi {
    private wizardManager;
    private clonePageBuilderFactory;
    private restrictionsStepHandlerFactory;
    private experienceService;
    private confirmationModalService;
    private systemEventService;
    private restrictionTypesService;
    private restrictionsService;
    private sharedDataService;
    private clonePageAlertService;
    private alertService;
    private pageFacade;
    private syncPollingService;
    uriContext: IUriContext;
    callbacks: WizardCallbacks;
    basePageUUID: string;
    restrictionStepProperties: WizardStep;
    restrictionsEditorFunctionBindings: RestrictionsEditorFunctionBindings;
    typeChanged: boolean;
    infoChanged: boolean;
    private cloneInProgress;
    private restrictionsStepHandler;
    private pageBuilder;
    private readonly CLONE_PAGE_WIZARD_STEPS;
    constructor(wizardManager: WizardService, clonePageBuilderFactory: ClonePageBuilderFactory, restrictionsStepHandlerFactory: RestrictionsStepHandlerFactory, experienceService: IExperienceService, confirmationModalService: IConfirmationModalService, systemEventService: SystemEventService, restrictionTypesService: RestrictionTypesService, restrictionsService: RestrictionsService, sharedDataService: ISharedDataService, clonePageAlertService: ClonePageAlertService, alertService: IAlertService, pageFacade: PageFacade, syncPollingService: ISyncPollingService);
    getWizardConfig: () => WizardConfig;
    getRestrictionTypes: () => Promise<IRestrictionType[]>;
    getSupportedRestrictionTypes: () => Promise<string[]>;
    variationResult: (displayConditionResult: ICMSPage) => void;
    getPageTypeCode(): CMSPageTypes;
    getPageLabel(): string;
    getBasePageUuid(): string;
    getPageTemplate(): string;
    getPageInfo(): ICMSPage;
    getBasePageInfo(): ICMSPage;
    getPageRestrictions(): string[];
    onTargetCatalogVersionSelected(catalogVersion: ICatalogVersion): void;
    triggerUpdateCloneOptionResult(cloneOptionResult: string): void;
    getPageInfoStructure(): GenericEditorStructure;
    restrictionsResult(data: RestrictionsDTO): void;
    isRestrictionsActive(): boolean;
    isPageInfoActive(): boolean;
    getTargetCatalogVersion(): ICatalogVersion;
    isBasePageInfoAvailable(): boolean;
    onCancel(): Promise<any>;
    isFormValid(stepId: string): boolean;
    onNext(): boolean;
    onDone(): Promise<any>;
    private createPage;
    private preparePagePayload;
}
