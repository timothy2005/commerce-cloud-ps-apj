<?xml version="1.0"?>
<!--
 Copyright (c) 2021 SAP SE or an SAP affiliate company. All rights reserved.
-->
<project name="smartedit_buildcallbacks">


    <patternset id="extension.smartedit.binary.filter">
        <patternset refid="extension.binary.filter"/>
        <exclude name="**/node_modules/"/>
        <exclude name="smartedit-custom-build/generated/"/>
        <exclude name="smartedit-custom-build/lib"/>
        <exclude name="resources/smartedit/test-metadata/"/>
    </patternset>

    <patternset id="extension.smartedit.source.filter">
        <patternset refid="extension.source.filter"/>
        <exclude name="**/node_modules/"/>
        <exclude name="smartedit-custom-build/generated/"/>
        <exclude name="smartedit-custom-build/lib"/>
        <exclude name="resources/smartedit/test-metadata/"/>
    </patternset>

    <patternset id="extension.smartedit.production.filter">
        <patternset refid="extension.production.filter" />
        <exclude name="**/node_modules/"/>
        <exclude name="smartedit-custom-build/generated/"/>
        <exclude name="smartedit-custom-build/lib"/>
        <exclude name="web/app/webappinjector/"/>
        <exclude name="resources/smartedit/test-metadata/"/>
    </patternset>

    <macrodef name="smartedit_before_clean">
        <sequential>
            <if>
                <available file="${ext.smartedittools.path}${file.separator}common${file.separator}temp${file.separator}node_modules" type="dir"/>
                <then>
                    <delete dir="${ext.smartedit.path}${file.separator}web${file.separator}webroot${file.separator}static-resources${file.separator}dist${file.separator}smartedit${file.separator}css" />
                    <delete dir="${ext.smartedit.path}${file.separator}web${file.separator}webroot${file.separator}static-resources${file.separator}dist${file.separator}smartedit${file.separator}js" />
                </then>
            </if>
        </sequential>
    </macrodef>

    <macrodef name="smartedit_before_build">
        <sequential>
            <build_smartedit_extension extensionName="smartedit" appNames="smart-utils,smartedit-commons,smartedit-container,smartedit-loader,smartedit,smartedit-bootstrap,web-app-injector,smartedit-master" />
        </sequential>
    </macrodef>

    <!-- Please find details in https://cxjira.sap.com/browse/CMSX-10210
    that why we can use 'web' property to ensure our frontend UT only execute once in team & commerce-suite pipeline -->
    <macrodef name="smartedit_before_yunit">
        <!-- 'includeAngularUT' flag will be set as true in team pipeline.
        It will be removed after ECPP install Chrome -->
        <attribute name="includeAngularUT" default="false"/>
        <sequential>
            <if>
                <and>
                    <istrue value="${testclasses.web}"/>
                    <istrue value="${includeAngularUT}"/>
                </and>
                <then>
                    <test_smartedit_extension extensionName="smartedit" appNames="smart-utils,smartedit-commons,smartedit-container,smartedit"/>
                </then>
            </if>
        </sequential>
    </macrodef>

    <macrodef name="platform_after_build">
        <sequential>
            <echo message="RUNNING AFTER PLATFORM BUILD" />
        </sequential>
    </macrodef>

    <macrodef name="linkSmarteditBundle">
        <attribute name="target" default="NOT_SET"/>
        <sequential>
            <echo message="linkSmarteditBundle: Deprecated since 21.05"/>
        </sequential>
    </macrodef>

    <macrodef name="unLinkSmarteditBundle">
        <attribute name="target" default="NOT_SET"/>
        <sequential>
            <echo message="unLinkSmarteditBundle: Deprecated since 21.05"/>
        </sequential>
    </macrodef>

    <!--
        How-to run unit tests in the extension:
        1- Execute the command "ant allwebtests" within "platform" folder (will execute tests for ALL extensions).
        2- OR Execute the command "npm run test" or "npm run test:dev" in each apps/*/* folder individually.
        3- OR Execute the command "ant test_smartedit"
    -->
    <target name="test_smartedit">
        <test_smartedit_extension extensionName="smartedit" appNames="smart-utils,smartedit-commons,smartedit-container,smartedit"/>
    </target>

    <target name="lint_smartedit">
        <sequential>
            <lint_smartedit_extension extensionName="smartedit" appNames="smart-utils,smartedit,smartedit-bootstrap,smartedit-commons,smartedit-container,smartedit-e2e,smartedit-loader,smartedit-master,web-app-injector"/>
        </sequential>
    </target>

    <target name="generate_smartedit_docs">
        <generate_smartedit_extension_docs extensionName="smartedit" appNames="smartedit-commons,smartedit-container,smartedit" />
    </target>

</project>
